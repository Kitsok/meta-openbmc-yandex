--- kernel-source/drivers/char/ipmi/ipmi_msghandler.c.orig	2016-12-15 14:05:06.000000000 +0300
+++ kernel-source/drivers/char/ipmi/ipmi_msghandler.c	2016-12-15 14:55:44.835167103 +0300
@@ -2861,7 +2861,7 @@ int ipmi_register_smi(const struct ipmi_
 	if (rv)
 		goto out;
 
-	get_guid(intf);
+/*	get_guid(intf); */
 
 	if ((intf->ipmi_version_major > 1)
 			|| ((intf->ipmi_version_major == 1)
@@ -3820,6 +3820,8 @@ static void handle_new_recv_msgs(ipmi_sm
 	while (!list_empty(&intf->waiting_rcv_msgs)) {
+		static int v = 0;
 		smi_msg = list_entry(intf->waiting_rcv_msgs.next,
 				     struct ipmi_smi_msg, link);
+		if (++v == 4) { printk("smi_msg=%p\n", smi_msg); v=0; }
 		list_del(&smi_msg->link);
 		if (!run_to_completion)
 			spin_unlock_irqrestore(&intf->waiting_rcv_msgs_lock,
--- source/drivers/i2c/busses/i2c-aspeed.c.orig	2016-12-15 19:40:58.000000000 +0300
+++ source/drivers/i2c/busses/i2c-aspeed.c	2016-12-15 20:03:49.690235539 +0300
@@ -628,6 +628,9 @@ static bool ast_i2c_slave_irq(struct ast
 		i2c_slave_event(slave, I2C_SLAVE_STOP, &value);
 	}
 
+	if (irq_status & AST_I2CD_INTR_BUS_RECOVER_DONE)
+		status_ack |= AST_I2CD_INTR_BUS_RECOVER_DONE;
+
 	if (status_ack != irq_status)
 		dev_err(bus->dev,
 			"irq handled != irq. expected %x, but was %x\n",
@@ -573,7 +573,7 @@ static bool ast_i2c_slave_irq(struct ast
 		goto out;
 	}
 
-	dev_dbg(bus->dev, "slave irq status 0x%08x, cmd 0x%08x\n",
+	dev_dbg(bus->dev, "slave irq status 0x%08x, cmd 0x%08x\n",
 		irq_status, command);
 
 	/* Slave was sent something. */
